import type {SourceUnit, ElementaryTypeName, Assignment, BinaryOperation, Conditional, ElementaryTypeNameExpression, IndexAccess, FunctionCall, FunctionCallOptions, Literal, MemberAccess, NewExpression, TupleExpression, UnaryOperation, FunctionTypeName, ForStatement, IfStatement, EmitStatement, ExpressionStatement, VariableDeclarationStatement, WhileStatement, PlaceholderStatement, TryStatement, TryCatchClause, IdentifierPath, UserDefinedTypeName, InheritanceSpecifier, ModifierInvocation, Identifier, Block, UncheckedBlock, OverrideSpecifier, EnumValue, EnumDefinition, ErrorDefinition, EventDefinition, FunctionDefinition, ParameterList, ArrayTypeName, Mapping, ModifierDefinition, InlineAssembly, ImportDirective, PragmaDirective, ContractDefinition, Return, RevertStatement, StructDefinition, UsingForDirective, VariableDeclaration, StructuredDocumentation} from './types';
export type Node = SourceUnit | ElementaryTypeName | Assignment | BinaryOperation | Conditional | ElementaryTypeNameExpression | IndexAccess | FunctionCall | FunctionCallOptions | Literal | MemberAccess | NewExpression | TupleExpression | UnaryOperation | FunctionTypeName | ForStatement | IfStatement | EmitStatement | ExpressionStatement | VariableDeclarationStatement | WhileStatement | PlaceholderStatement | TryStatement | TryCatchClause | IdentifierPath | UserDefinedTypeName | InheritanceSpecifier | ModifierInvocation | Identifier | Block | UncheckedBlock | OverrideSpecifier | EnumValue | EnumDefinition | ErrorDefinition | EventDefinition | FunctionDefinition | ParameterList | ArrayTypeName | Mapping | ModifierDefinition | InlineAssembly | ImportDirective | PragmaDirective | ContractDefinition | Return | RevertStatement | StructDefinition | UsingForDirective | VariableDeclaration | StructuredDocumentation;
export type NodeTypeMap = { SourceUnit: SourceUnit, ElementaryTypeName: ElementaryTypeName, Assignment: Assignment, BinaryOperation: BinaryOperation, Conditional: Conditional, ElementaryTypeNameExpression: ElementaryTypeNameExpression, IndexAccess: IndexAccess, FunctionCall: FunctionCall, FunctionCallOptions: FunctionCallOptions, Literal: Literal, MemberAccess: MemberAccess, NewExpression: NewExpression, TupleExpression: TupleExpression, UnaryOperation: UnaryOperation, FunctionTypeName: FunctionTypeName, ForStatement: ForStatement, IfStatement: IfStatement, EmitStatement: EmitStatement, ExpressionStatement: ExpressionStatement, VariableDeclarationStatement: VariableDeclarationStatement, WhileStatement: WhileStatement, PlaceholderStatement: PlaceholderStatement, TryStatement: TryStatement, TryCatchClause: TryCatchClause, IdentifierPath: IdentifierPath, UserDefinedTypeName: UserDefinedTypeName, InheritanceSpecifier: InheritanceSpecifier, ModifierInvocation: ModifierInvocation, Identifier: Identifier, Block: Block, UncheckedBlock: UncheckedBlock, OverrideSpecifier: OverrideSpecifier, EnumValue: EnumValue, EnumDefinition: EnumDefinition, ErrorDefinition: ErrorDefinition, EventDefinition: EventDefinition, FunctionDefinition: FunctionDefinition, ParameterList: ParameterList, ArrayTypeName: ArrayTypeName, Mapping: Mapping, ModifierDefinition: ModifierDefinition, InlineAssembly: InlineAssembly, ImportDirective: ImportDirective, PragmaDirective: PragmaDirective, ContractDefinition: ContractDefinition, Return: Return, RevertStatement: RevertStatement, StructDefinition: StructDefinition, UsingForDirective: UsingForDirective, VariableDeclaration: VariableDeclaration, StructuredDocumentation: StructuredDocumentation };
export type NodeType = keyof NodeTypeMap;